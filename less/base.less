@charset "utf-8";

/* css reset:为什么? 为了重置默认样式, 并让各大浏览器的样式统一 */
/* 初始化 */
body,
div,
ul,
li,
ol,
h1,
h2,
h3,
h4,
h5,
h6,
input,
textarea,
select,
p,
dl,
dt,
dd,
a,
img,
button,
form,
table,
th,
tr,
td,
tbody,
article,
aside,
details,
figcaption,
figure,
footer,
header,
menu,
nav,
section {
  margin: 0;
  padding: 0;
  /* 给我们能用到的盒子都加上了, box-sizing: border-box; */
  box-sizing: border-box;
}

body {
  font: 12px/1.5 'Microsoft YaHei', '宋体', Tahoma, Arial, sans-serif;
  color: #555;
  background-color: #f7f7f7;
}

/*去除边框*/
fieldset,
img,
input,
button,
textarea {
  border: none;
  /*去除的蓝色小边框*/
  outline-style: none;
}

/*禁止表单域缩放*/
textarea {
  resize: none;
}

a {
  text-decoration: none;
  color: #969696;
  /* 取消链接高亮(移动端)  */
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

/* 图片自适应 */
img {
  width: 100%;
  /*解决图片底部对其问题, 底部对齐问题, 只对于行内块元素有 */
  display: block;
}

ul,
ol {
  list-style: none;
}

/* 把所有的标题的样式全部重置了 */
h1,
h2,
h3,
h4,
h5,
h6 {
  text-decoration: none;
  font-weight: normal;
  font-size: 100%;
}

/* 废物利用 */
em,
i {
  font-style: normal;
  display: block;
}

/* 提供了一些公共类 */
.fl {
  float: left;
}

.fr {
  float: right;
}

/*清除浮动*/
.clearfix:before,
.clearfix:after {
  content: '';
  display: table;
}

.clearfix:after {
  clear: both;
}

/*单行溢出*/
.one-txt-cut {
  overflow: hidden;
  /* 文字在一行显示, 不换行 */
  white-space: nowrap;
  /* 文字溢出显示省略号 */
  text-overflow: ellipsis;
}

/*多行溢出*/
.txt-cut {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
}


// ----------------rem布局的适配工作
// 1、把px转换成rem单位——》此时根据设计图的尺寸自定义一个font-size大小
// 2、通过媒体查询适配不同的屏幕
//  font-size = 当前适配屏幕的宽度 / 比例

// 苏宁官网中适配了：750 720 540 480 424 414 400 384 375 360 320

// 针对于重复的代码在less中可以抽取出一个函数

.adapter(@w) {
  @media screen and (min-width:@w) {
    html {
      // round(数值)：把数值进行四舍五入
      // round(数值,保留的位置)
      font-size: round(@w/15,2);
    }
  }
}

.adapter(320px);
.adapter(360px);
.adapter(375px);
.adapter(384px);
.adapter(400px);
.adapter(414px);
.adapter(424px);
.adapter(480px);
.adapter(540px);
.adapter(720px);
.adapter(750px);

// 适配540的屏幕
// @media screen and (min-width:540px) {
//   html {
//     font-size: 540px/15;
//   }
// }

// 适配720px的屏幕
// @media screen and (min-width:720px) {
//   html {
//     font-size: 720px/15;
//   }
// }

// 750屏幕进行适配
// 比例 = 当前屏幕的宽度 / font-size = 750/50 = 15
// @media screen and (min-width:750px) {
//   html {
//     font-size: 50px;
//   }
// }


